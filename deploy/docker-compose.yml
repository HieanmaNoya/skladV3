version: '3.8'

services:
    app:
        build:
            context: ..
            dockerfile: deploy/Dockerfile
            args:
                PHP_VERSION: ${PHP_VERSION:-8.3.6}
                COMPOSER_VERSION: ${COMPOSER_VERSION:-2.7.2}
        container_name: laravel_app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ../project/backend:/var/www
            - .docker/php/php.ini:/usr/local/etc/php/conf.d/app.ini
        ports:
            - "8000:8000"
        environment:
            - DB_CONNECTION=pgsql
            - DB_HOST=postgres
            - DB_PORT=5432
            - DB_DATABASE=sklad
            - DB_USERNAME=sklad
            - DB_PASSWORD=root
        networks:
            - app-network
        depends_on:
            - postgres


    webserver:
        image: nginx:alpine
        container_name: nginx_server
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - ../project/backend:/var/www
            - .docker/nginx/conf.d/app.conf:/etc/nginx/conf.d/default.conf
        networks:
            - app-network
        depends_on:
            - app

    postgres:
        image: postgres:15
        container_name: postgres_db
        restart: unless-stopped
        environment:
            POSTGRES_DB: sklad
            POSTGRES_USER: sklad
            POSTGRES_PASSWORD: root
            POSTGRES_HOST_AUTH_METHOD: trust
        volumes:
            - postgresdata:/var/lib/postgresql/data
            - ../.docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql  # Правильно
        ports:
            - "5432:5432"
        networks:
            - app-network

    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin
        restart: unless-stopped
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@example.com
            PGADMIN_DEFAULT_PASSWORD: admin
            PGADMIN_LISTEN_PORT: 5050
        ports:
            - "5050:5050"
        volumes:
            - pgadmindata:/var/lib/pgadmin
        networks:
            - app-network
        depends_on:
            - postgres

volumes:
    postgresdata:
        driver: local
    pgadmindata:
        driver: local

networks:
    app-network:
        driver: bridge

